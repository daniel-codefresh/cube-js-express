module.exports = {
    namespace: 'etl',
    tableName: 'BuildsEnd',
    schema: [
        { name: 'updatedAt', type: 'TIMESTAMP' },
        { name: 'buildId', type: 'STRING' },
        { name: 'accountId', type: 'STRING' },
        { name: 'pack', type: 'STRING' },
        { name: 'isFinal', type: 'BOOL' },
        { name: 'status', type: 'STRING' },
        { name: 'buildMinutes', type: 'NUMERIC' },
        { name: 'concurrency', type: 'NUMERIC' },
        { name: 'ignore', type: 'STRING' },
        { name: 'hybrid', type: 'BOOL' },
        { name: 'ts', type: 'TIMESTAMP' },
        { name: 'delta', type: 'NUMERIC' },
        { name: 'day', type: 'TIMESTAMP' },
        { name: 'bm', type: 'NUMERIC' },
        { name: 'subExecutionId', type: 'NUMERIC' },
        { name: 'retryNumber', type: 'NUMERIC' },
        { name: 'pipelineId', type: 'STRING' },
        { name: 'idleTime', type: 'NUMERIC' },
        { name: 'delayTime', type: 'NUMERIC' },
        { name: 'buildLeadTime', type: 'NUMERIC' },
        { name: 'buildTimeGross', type: 'NUMERIC' },
        { name: 'timeSincePreviousSubExecution', type: 'NUMERIC' },
        { name: 'totalTimeForSubExecutions', type: 'NUMERIC' },
        { name: 'requestTime', type: 'TIMESTAMP' },
        { name: 'electionTime', type: 'TIMESTAMP' },
        { name: 'startTime', type: 'TIMESTAMP' },
        { name: 'endTime', type: 'TIMESTAMP' },
        { name: 'pendingLicense', type: 'BOOL' },
        { name: 'triggerType', type: 'STRING' },
        { name: 'triggerEvent', type: 'STRING' },
        { name: 'numOfSteps', type: 'NUMERIC' },
        { name: 'runtimeName', type: 'STRING' },
        { name: 'engineVersion', type: 'STRING' },
        { name: 'configType', type: 'STRING' },
        { name: 'memoryLimit', type: 'NUMERIC' },
        { name: 'cpuLimitConfig', type: 'NUMERIC' },
        { name: 'memoryRequestConfig', type: 'NUMERIC' },
        { name: 'cpuRequestConfig', type: 'NUMERIC' },
        { name: 'diskSizeConfig', type: 'NUMERIC' },
        { name: 'clusterName', type: 'STRING' },
        { name: 'clusterNamespace', type: 'STRING' },
        { name: 'clusterProviderAccount', type: 'STRING' },
        { name: 'clusterProviderSelector', type: 'STRING' },
        { name: 'dindAccountName', type: 'STRING' },
    ]
};
